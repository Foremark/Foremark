<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head><mf-text><![CDATA[
<!-- Markfront header -->

                  **Markfront Reference Manual**

This document describes the features supported by Markfront.

# Markfront Text

## Block quotations

Email-style indenting creates a block quotation:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
> Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
> tempor incididunt ut labore et dolore magna aliqua.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Only an empty line closes a block quotation. This requirement prevents a text editor's hard wrapping functionality from messing up blockquotes:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
Here comes a famous passage:
> Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua.
Still in a block quotation...

No longer in a block quotation.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Block quotes are processed before most kinds of Markfront constructs (even HTML tags!). However, code blocks are processed earlier so that quotation marks inside a code fence are handled as intended:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
> <b>This `<b>` element does not
> have the `>` sign in it.</b>
>
> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
>
> >
> >
>
> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


## HTML tags

Markfront Text interprets well-formed HTML tags embedded in a text node as HTML tags. The criterions are chosen to be very strict in order to minimize the chance of misdetections. A HTML tag will not be interpreted as a HTML tag unless all of the following criterias are met:

- It's not inside a code block or an inline code markup. (HTML tags are processed after code blocks and inline code markups.)
- It must use a strictly valid XML syntax, which means:
    - No self-closing tags. `<br/>` (empty-element tag) should be used in place of `<br>`.
    - `<`, `>`, and `"` inside an attribute must be escaped.
    - Every attribute must have a value.
- Only the following XML entities are permitted inside: `&amp;` `&lt;` `&gt;` `&quot;`
- It must not include a XML namespace in the tag name.
- It must not contain any redundant whitespaces in the following places:
    - Between `<` or `</` and the tag name.
    - Between the tag name and `>` of a closing tag.
    - Between `<`, `>`, and `/`.
- If it doesn't use an empty-element tag, then there must exist a matching closing tag.
- The tag name and all attribute names match `/^[a-z][-a-z0-9]*$/` [^tag-name].

[^tag-name]:
    This is a subset of [XML NCName][]. It's quite restricted but still covers all standard HTML and Markfront XML elements.

[XML NCName]: https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-NCName

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
Valid tag: <br />
Extra whitespaces: < br / > (displayed as "< br / >")
Self-closing: <br> (displayed as "<br>" unless there's `</br>`)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

!!! Note

    The conversion described in this section only applies to HTML tags *embedded as a textual content* (like most of the Markfront Text constructs).
    If HTML tags are not wrapped by `<![CDATA[...]​]>`, they will be parsed by the XHTML parser and converted to XHTML elements before the Markfront text processing takes place.

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ XML
    <mf-text>
        <!-- The web browser interprets this as a bold element -->
        <b>Bold text</b>

        <!-- Converted to a bold element as a part of the Markfront
             text processing. -->
        &lt;b&gt;Bold text&lt;/b&gt;

        <!-- Equivalent to the previous example. -->
        <![CDATA[ <b>Bold text</b> ]]]><![CDATA[]>
    </mf-text>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


## Hyperlinks

### Normal hyperlinks

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
[This](https://www.example.com) is a normal Markdown hyperlink.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### Symbolic hyperlinks

Link targets can be placed out-of-text:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
[**This**][] is a symbolic hyperlink with an implied symbol name.

[This][example] is a symbolic hyperlink with an explicit symbol name.
ALso, notice that the link target can span across multiple lines.
All link breaks within a link target are removed.

[**This**]:  https://www.example.com
[example]:   https://
             www.example.com
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Symbol names are case-sensitive.

A link target definition is only associated with the closest preceding symbolic
hyperlink. A symbolic hyperlink is associated with a link target definition
only if:

- The hyperlink precedes the link target definition.
- There is no hyperlink or link target definiton with an identical symbol name
  between the hyperlink and the link target definition.

A symbolic hyperlink is not formed if no link target could be associated.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
[This][example] is not a hyperlink and is displayed as `[This][example]`.

[This][example] is a hyperlink.

[example]: https://www.example.com
[example]: https://www.example.com/this-link-target-definition-is-ignored
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The association cannot be formed across the boundaries of `<mf-text>`.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ XML
<mf-text>
[This][example] is not a hyperlink and is displayed as `[This][example]`.
</mf-text>
<mf-text>
[example]: https://www.example.com
</mf-text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## Images

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
The pudding face looks like
![alt text (optional)](https://derpicdn.net/img/2018/11/8/1877696/medium.png) or
![alt text (optional)][pudding].

[pudding]: https://derpicdn.net/img/2018/11/8/1877696/medium.png
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Inline images are directly rendered as HTML `<img>` elements.

Read [Symbolic hyperlinks](#markfronttext/hyperlinks/symbolichyperlinks) for more about symbolic hyperlinks (`[pudding]` in the above example).

Use the block syntax to insert an image block using `<mf-figure>`. The block syntax is distinguished by the colon at the end and the addition of an optional figure label:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
The pudding faces are shown below:

![^][alttext](https://derpicdn.net/img/2018/11/8/1877696/medium.png):
    Image block (manually positioned)

![!!][alttext](https://derpicdn.net/img/2018/11/8/1877696/medium.png):
    Image block (manually positioned) but takes entire a row

![!Figure fig1][alttext](https://derpicdn.net/img/2018/11/8/1877696/medium.png):
    Figure (possibly automatically positioned)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The first part (`[^]`, `[!Figure fig1]`) is based on [the floating contents block syntax](#markfronttext/floatingcontents). Sidenote labels (e.g., `[!basenameonly]`) may not be used.

!!! Warning
    `![^][][symbol]:` (A image block with a symbolic name) is not supported.

An image tag optionally include XML attributes:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
![](https://derpicdn.net/img/2018/11/8/1877696/medium.png style="animation: 2000ms _2qw9KkueUdLlzZdwjgAKzl both infinite linear")

![^][](https://derpicdn.net/img/2018/11/8/1877696/medium.png style="animation: 2000ms _2qw9KkueUdLlzZdwjgAKzl both infinite linear"):
    Image caption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Which are converted into:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ XML
<img src="https://derpicdn.net/img/2018/11/8/1877696/medium.png"
     style="animation: 2000ms _2qw9KkueUdLlzZdwjgAKzl both infinite linear" />

<mf-figure>
    <mf-figure-caption>
        Image caption
    </mf-figure-caption>
    <p>
        <img src="https://derpicdn.net/img/2018/11/8/1877696/medium.png"
             style="animation: 2000ms _2qw9KkueUdLlzZdwjgAKzl both infinite linear" />
    </p>
</mf-figure>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## Floating contents

Figures and sidenotes use a (somewhat) unified syntax:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Markdown
Let there be some paragraph text[^sidenote].
See [!!Figure fig1] as well as [!Table table]. [!図:fig2]も併せてご覧下さい。
.i ko zgana [!le pixra pe li mupli-pixra]

[^]:
    This is displayed as a sidenote without numbering.

[^sidenote]: Here comes the sidenote.
    Sidenotes are different from figures in the point that
    the first line is not treated specially as a caption.

[!!Figure fig1]: Twily for dummies.
    ![](https://derpicdn.net/img/2013/8/4/391426/large.png)

[!Table table]:
    Since the caption line was left empty, this table has no caption.

    | Elements of Harmony | Pillars of Old Equestria |
    |---------------------|--------------------------|
    | Honesty             | Strength                 |
    | Kindness            | Healing                  |
    | Laughter            | Hope                     |
    | Generosity          | Beauty                   |
    | Loyalty             | Bravery                  |
    | Magic               | Sorcery                  |

[!図:fig2]: Yay.
    ![](https://derpicdn.net/img/2018/8/18/1809969/large.png)

[!le pixra pe li mupli-pixra]: Empty figure.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The part surrounded by brackets is called a *label*. A label consists of the following components:

- A preceding `^` (caret), `!` (exclamation mark), or `!!` (two exclamation marks) specify how the content should be layouted.
    - `^` — The default mode. On a large screen, the content is moved to the side margin.
    - `!` — Translated to `size="large"`. The content is not moved to the side margin and always occupies a row.
    - `!!` — Translated to `size="full"`. The content occupies the maximum available width (including the side margin).

- An optional label identifier, which consists of:

    - An optional number prefix. This serves the purpose of identifying an independent counter for each figure type (e.g., figure/table), and as a text to be displayed before a number. There are two forms:

        - The space-delimited form like `[^Figure fig]` inserts a whitespace between the prefix and a number.
        - The non-space-delimited form like `[^図:fig]` does not insert a whitespace.

      This component is included in the floating element ID along with the base name.

    - A non-empty base name.

      A base name may not include `:` or a whitespace character. Therefore, a label `[^le pixra pe li mupli-pixra]` is interpreted as `le pixra pe li` + `mupli-pixra`[^jbopixra].

A label not including a preceding symbol like `[this is a mere link or not]` is not treated as a floating element label but rather as a potential normal link.

The number prefix and the base name together forms a label identifier.

!!! Tip
    The preceding `^` and `!` symbols do not constitute the label identifier. so it's technically possible to refer to a figure with a different symbol. However, it's considered a bad practice because it makes it harder to find a tag using a text editor's search functionality.

!!! Tip
    Although the figure syntax described here can be used for any kinds of contents, it's better to use the image block syntax if you just intend to display an image as a figure.

!!! Note: Differences from Markdeep
    - Figures and sidenotes use the unified system. Still, there is a dedicated syntax for figures.
    - Like Markdeep, sidenotes may contain multiple lines, but they must be indented to be included.
    - Sidenotes can contain multiple paragraphs.

!!! TODO: Yet to be written about...
    - Citations (e.g., `[#Kajiya86]`).
    - Find a way to place table captions above tables but not figure captions.
    - Full width figures (e.g., `[!!Figure fig1]`).

The following table summarizes all forms of labels:

|       Label       | Reference |   Definition  |         `size`        |      `id`     |
|-------------------|-----------|---------------|-----------------------|---------------|
| `[!!]`            | N/A       | `<mf-note>`   | `"full"` [!full-note] | note          |
| `[!]`             | N/A       | `<mf-note>`   | `"large"`             | note          |
| `[^]`             | N/A       | `<mf-note>`   |                       | note          |
| `[!!endnote]`     | ¹         | `<mf-note>`   | `"full"` [!full-note] | `endnote`     |
| `[!endnote]`      | ²         | `<mf-note>`   | `"large"`             | `endnote`     |
| `[^sidenote]`     | ³         | `<mf-note>`   |                       | `sidenote`    |
| `[!!Figure fig1]` | Figure 1  | `<mf-figure>` | `"full"`              | `Figure fig1` |
| `[!Figure fig2]`  | Figure 2  | `<mf-figure>` | `"large"`             | `Figure fig2` |
| `[^Figure fig3]`  | Figure 3  | `<mf-figure>` |                       | `Figure fig3` |
| `[!!図:fig2]`     | 図1       | `<mf-figure>` | `"full"`              | `図:fig2`     |
| `[!図:fig2]`      | 図2       | `<mf-figure>` | `"large"`             | `図:fig2`     |
| `[^図:fig3]`      | 図3       | `<mf-figure>` |                       | `図:fig3`     |

[!full-note]: Does not have an effect. Treated as `"large"`.

- The **Label** column shows the raw source code.
- All reference tags are translated into `<mf-ref>` elements. The **Reference** column shows how a `<mf-ref>` is displayed.
- The contents of a floating element is wrapped by an element shown in the **Definition** column. This element has the attributes shown in the last two columns, **`size`** and **`id`**.

Unreferenced labels are omitted from the output.

[^jbopixra]:
    `«le pixra pe li □»` roughly means "the picture pertaining to number □" in [Lojban][].
    It could be written more concisely as `«le li □ pixra»`, which isn't supported by Markfront at this point.

[Lojban]: https://en.wikipedia.org/wiki/Lojban

# Markfront XML

## HTML elements

The following HTML elements are supported and styled appropriately.

- `<h1>` ... `<h9>`
- `<p>`
- `<i>`, `<b>`, `<a>`
- `<code>`
- `<ul>`, `<ol>`, `<ll>`
- `<dl>`, `<dt>`, `<dd>`
- `<br>`

## Document — `<mf>`

~~~~~~~~~~~~xml
<mf>
<mf-title>Document title</mf-title>
</mf>
~~~~~~~~~~~~

- `class="no-sidenotes"` disables sidenotes. All `[^note]` are treated like `[!note]`.

## Header — `<mf-title>`

~~~~~~~~~~~~xml
<mf-title>I Have No Mouth and I Must Scream</mf-title>
<mf-lead>Harlan Ellison</mf-lead>
~~~~~~~~~~~~

`<mf-title>` inserts a document title. `<mf-lead>` inserts a subtitle and if it exists it must follow `<mf-title>`.

*Relevant Markfront Text tags*: `**title**`

## Lists

~~~~~~~~~~~~xml
<ul>
    <li><p>unordered list</p></li>
</ul>
<ol>
    <li><p>ordered list</p></li>
</ol>
<dl>
    <dt><p>caption</p></dt>
    <dd><p>decsription</p></dd>
</dl>
~~~~~~~~~~~~

HTML lists `<ul>` (unordered list), `<ol>` (ordered list), and `<dl>` (definition list) are supported.

`ul > li` may have one of the following CSS classes:

- `checked` indicates that a checked checkbox should be displayed next the item.
- `unchecked` indicates that an unchecked checkbox should be displayed next the item.

*Relevant Markfront Text tags*: `-` `+` `*` `[ ]` `[x]` and more

## Code blocks — `<mf-code>`

~~~~~~~~~~~~xml
<mf-codeblock>
    <mf-code type="Python input">&gt;&gt;&gt; x = [1, 2, 3, 4]
&gt;&gt;&gt; [y * 2 for y in x]</mf-code>
    <mf-code type="none output">[2, 4, 6, 8]</mf-code>
</mf-codeblock>
~~~~~~~~~~~~

**`<mf-code>`** displays a code block with syntax highlighting.
`type` attribute is a space-separated string and the first element indicates the syntax name used for syntax highlighting.

One or more `<mf-code>` elements can be wrapped by **`<mf-codeblock>`**.

!!! Warning
    `<mf-code>` is a block element that should not be confused with `<code>`, which is an inline element used to insert a inline code fragment.

!!! TODO: Yet to be written about...
    The semantics of the rest of `type` attribute value.

*Relevant Markfront Text tags*: `~~~~`–`~~~~`

## LaTeX equations — `<mf-eq>`

~~~~~~~~~~~~xml
<mf-eq-display>
    \Lo(X, \wo) = \Le(X, \wo) + \int_\Omega \Li(X, \wi) ~ f_X(\wi, \wo) ~ | \n \cdot \wi | ~ d\wi
</mf-eq-display>
<p>
    The LLVM target <i>triplet</i> is comprised of <i>five</i> elements.
    Therefore, <mf-eq>3 = 5</mf-eq>.
</p>
~~~~~~~~~~~~

`<mf-eq>` inserts an inline LaTeX equation. Similarly, `<mf-eq-display>` inserts a display LaTeX equation.

*Relevant Markfront Text tags*: `$inline$` `$$display$$`

## Floating elements

Figures and sidenotes have the following common attributes:

- The optional **`id`** attribute is used to reference the element from `<mf-ref>`.
- **`size="large"`** prevents the element to be layouted in a confined space like the sidenote margin.
- **`size="full"`** causes the element to occupy the maximum available width. Not supported by sidenotes (because it doesn't make sense!).

!!! Tip
    `size="full"` enables a special styling, which also enables the sidenote margin (even if there aren't actual sidenotes).

### Figures — `<mf-figure>`

~~~~~~~~~~~~xml
<mf-figure id="figureId" counter="table" label="Table {}" size="large">
    <mf-figure-caption>
        Caption
    </mf-figure-caption>
    <p>
        Contents
    </p>
</mf-figure>
~~~~~~~~~~~~

- **`counter`** identifies a counter used to generate a figure number.
- **`label`** specifies the format of the displayed figure label. `{}` is substituted with a number.

If both of `counter` and `label` are omitted but `id` is specified, `counter` and `label` are implied from `id` provided that `id` is in a particular form.

- If `id.match(/(.+):[^ :]+/)`, then `counter` is `$1` and `label` is `$1{}`.
- If `id.match(/(.+) [^ :]+/)`, then `counter` is `$1` and `label` is `$1 {}`.

*Relevant Markfront Text tags*:
- `[^counter basename]: caption` `[!counter basename]: caption`
- `![^counter basename][alt](url): caption` `![!counter basename][alt](url): caption` (generates `<img>` wrapped with `<mf-figure>`)

### Sidenotes/Endnotes — `<mf-note>`

~~~~~~~~~~~~xml
<mf-note id="noteId" size="large">
    <p>
        Contents
    </p>
</mf-note>
~~~~~~~~~~~~

*Relevant Markfront Text tags*: `[^noteId]: contents` `[!noteId]: contents`

### Figure/note references — `<mf-ref>`

~~~~~~~~~~~~xml
<mf-note id="noteId"> ... </mf-note>
<p>
    <mf-ref to="noteId" />
</p>
~~~~~~~~~~~~

*Relevant Markfront Text tags*: `[^noteId]` `[!noteId]`

## Admonitions — `<mf-admonition>`

~~~~~~~~~~~~xml
<mf-admonition type="danger">
    <mf-admonition-title>
        Can I have your attention please?!
    </mf-admonition-title>
    <p>
        The message follows...
    </p>
</mf-admonition>
~~~~~~~~~~~~

*Relevant Markfront Text tag*: `!!!`

## Diagrams — `<mf-diagram>`

]]>
<mf-codeblock>
<mf-code type="xml">&lt;mf-diagram&gt;&lt;![CDATA[<![CDATA[
 .---------.
 |  Server |<------.
 '----+----'       |
      |            |
      | DATA CYCLE |
      v            |
 .---------.  .----+----.
 | Security|  |  File   |
 | Policy  +->| Manager |
 '---------'  '---------'
]]>]]&gt;&lt;/mf-diagram&gt;</mf-code>
</mf-codeblock>
<![CDATA[

*Relevant Markfront Text tags*: TODO

## Miscellaneous elements

- `<mf-error>` indicates an error encountered while processing `<mf-text>`.

<!-- Markfront footer -->
]]></mf-text><script src="browser/markfront.js" data-rel="markfront" />
</head></html>
