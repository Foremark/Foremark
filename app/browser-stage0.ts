// This module is loaded strictly before the stage1 loader.

if ('„ÅÇ'.charCodeAt(0) !== 0x3042) {
    throw new Error('The application was loaded with a wrong encoding.');
}

declare var __webpack_public_path__: string;

// Guess the public path based on the script tag.
//
// Without this, late loaded resources (webpack lazy loaded chunks
// and fonts referenced by stylesheets) will not load.
const script = document.querySelector('script[data-rel=foremark]');
const basePathMatch = script && (script as HTMLScriptElement).src.match(/^(.*?)[^\/]+$/);
if (basePathMatch) {
    __webpack_public_path__ = basePathMatch[1];
}

// Create `<head>` if it doesn't exist yet
//
// This must be done before a module generated by `style-loader` is loaded so
// that the module can find a `head` tag to inject a style tag into.
const head = document.getElementsByTagName('head')[0];
if (!head) {
    document.getElementsByTagName('html')[0].appendChild(
        document.createElement('head'));
}

// Create `<body>` if it doesn't exist yet
const body = document.getElementsByTagName('body')[0];
if (!body) {
    document.getElementsByTagName('html')[0].appendChild(
        document.createElement('body'));
}

// If we use `import` here, the TypeScript compiler would move it to the top of
// this script, defeating the purpose of this module.
require('./browser-stage1');
